@model JordanRift.Grassroots.Web.Models.CampaignDetailsModel
@{
    //
    // Grassroots is free software: you can redistribute it and/or modify
    // it under the terms of the GNU General Public License as published by
    // the Free Software Foundation, either version 3 of the License, or
    // (at your option) any later version.
    // 
    // Grassroots is distributed in the hope that it will be useful,
    // but WITHOUT ANY WARRANTY; without even the implied warranty of
    // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    // GNU General Public License for more details.
    // 
    // You should have received a copy of the GNU General Public License
    // along with Grassroots.  If not, see <http://www.gnu.org/licenses/>.
    //

    ViewBag.Title = "Editing " + Model.Title;
    var daysRemaining = (DateTime.Now < Model.EndDate) ? (Model.EndDate - DateTime.Now).Days : 0;
    var total = Model.Donations.Sum(d => d.Amount);
}

@section DocumentHead {
    @Html.Partial("UIForm")
}

    <div id="campaign-edit-form">
        @using (Html.BeginForm("Update", "Campaign", new { area = "", id = Model.CampaignID })) {
            @Html.AntiForgeryToken("EditCampaign")
            <section class="campaign-header">
		        <a href="@Url.Action("Index", new { controller = "UserProfile", area = "", id = Model.UserProfileID })" title="@Model.FirstName @Model.LastName's Profile">
                    <img src="@Model.UserImagePath" alt="@Model.FirstName @Model.LastName"/>
                </a>
                <span class="edit">
                    @Html.UiSubmit("Submit Changes")
                    @Html.ActionLink("Cancel", "Index", new { controller = "Campaign", slug = Model.UrlSlug }, new { title = "Cancel", @class = "cancel" })
                </span>
                <div class="url">
                <h2>Share this page with your friends</h2>
			    <span>@Url.ToPublicUrl(Url.Action("Index", "Campaign", new { slug = Model.UrlSlug }))</span>
                <div class="share">
			        <ul class="social-networks">
				        <li>@Html.Partial("TweetButton")</li>
                        <li>@Html.Partial("FacebookLikeButton")</li>
                        <li>@Html.Partial("PlusOneButton")</li>
                        <li>@Html.Partial("PinButton")</li>
                        <li>@Html.Partial("StumbleButton")</li>
			        </ul>
		        </div>
            </div>
	        </section>
            <hgroup class="campaign">
                <h1>@Model.Title</h1>
            </hgroup>
            @Html.ValidationSummary(false, "Unable to save your campaign. Please correct the following errors and try again.", new { @class = "ui-widget ui-state-error ui-corner-all" })
            @Html.HiddenFor(m => m.CampaignID)
            <div class="title">
                @Html.LabelFor(m => m.Title)
                @Html.TextBoxFor(m => m.Title)
                @Html.ValidationMessageFor(m => m.Title, null, new { @class = "ui-widget ui-state-error ui-corner-all" })
            </div>
            <div class="dashboard campaign-dashboard">
                @Html.Action("ProgressBar", new { controller = "Campaign", id = Model.CampaignID })
                <ul class="stats break">
                @if (Model.AmountIsConfigurable)
                {
                    <li class="first">
                        $ @Html.TextBoxFor(m => m.GoalAmount)
                        @Html.ValidationMessageFor(m => m.GoalAmount, null, new { @class = "ui-widget ui-state-error ui-corner-all" })
                    </li>
                }
                else 
                { 
                    <li class="first"><span>@Model.GoalAmount.ToString("C0")</span> Campaign Goal</li>
                }
                    <li><span>@total.ToString("C0")</span> Raised</li>
                    <li><span>@Model.Donations.Count</span> Donations</li>
                @if (Model.TimespanIsConfigurable)
                {
                    <li class="last">
                        @Html.EditorFor(m => m.EndDate)
                        @Html.ValidationMessageFor(m => m.EndDate, null, new { @class = "ui-widget ui-state-error ui-corner-all" })
                        @Html.HiddenFor(m => m.StartDate)
                    </li>
                }
                else
                {
                    <li class="last">
                        <span>@daysRemaining</span> Days Left
                        @Html.HiddenFor(m => m.StartDate)
                        @Html.HiddenFor(m => m.EndDate)
                    </li>
                }
                </ul>
            </div>
            <section class="summary">
                <div class="video">
                    @Html.Raw(Model.VideoEmbedHtml)
                </div>
                <div class="body">
                    <h2>In @Model.FirstName's Words...</h2>
                    <div>
                        @Html.TextAreaFor(m => m.Description)
                        @Html.ValidationMessageFor(m => m.Description, null, new { @class = "ui-widget ui-state-error ui-corner-all" })
                    </div>
                </div>
                <div class="break"></div>
            </section>
            @Html.Partial("DonationGrid", Model.Donations)
            <div>
                @Html.UiSubmit("Submit Changes")
                @Html.ActionLink("Cancel", "Index", new { controller = "Campaign", area = "", slug = Model.UrlSlug }, new { title = "Cancel", @class = "cancel" })
            </div>
        }
    </div>

@section DocumentBottom {
    <script type="text/javascript" src="//assets.pinterest.com/js/pinit.js"></script>
    <script type="text/javascript" src="//apis.google.com/js/plusone.js"></script>
    <script type="text/javascript">
        $(function () {
            $('#GoalAmount').keypress(function (e) {
                var keyCode = e.which || e.keyCode;
                if (keyCode >= 48 && keyCode <= 57) {
                    return true;
                } else if (keyCode === 46) {
                    return true;
                } else {
                    return false;
                }
            });
        });
    </script>
}