@model JordanRift.Grassroots.Web.Models.OrganizationDetailsModel
@{
    //
    // Copyright © 2011 Jordan Rift, LLC - All Rights Reserved
    //
    // THIS WORK IS LICENSED UNDER A CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-
    // SHAREALIKE 3.0 UNPORTED LICENSE:
    // http://creativecommons.org/licenses/by-nc-sa/3.0/
    //

    ViewBag.Title = "Edit Organization";
}
@section DocumentHead 
{
    @Html.Partial("UIForm")
}
<hgroup>
    <h1>Edit Your Orgazation Settings</h1>
</hgroup>
<div id="organization-edit-form">
    @using (Html.BeginForm("UpdateOrganization", "Admin")) { 
        <fieldset>
            <legend>Organization Settings</legend>
            @Html.ValidationSummary(false, "Please correct the errors and try again.")
            <dl>
                <dt>@Html.LabelFor(m => m.Name)</dt>
                <dd>
                    @Html.TextBoxFor(m => m.Name)
                    @Html.ValidationMessageFor(m => m.Name, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
                <dt>@Html.LabelFor(m => m.ContactEmail)</dt>
                <dd>
                    @Html.TextBoxFor(m => m.ContactEmail)
                    @Html.ValidationMessageFor(m => m.ContactEmail, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
                <dt>@Html.LabelFor(m => m.ContactPhone)</dt>
                <dd>
                    @Html.TextBoxFor(m => m.ContactPhone)
                    @Html.ValidationMessageFor(m => m.ContactPhone, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
            </dl>
        </fieldset>
        <fieldset>
            <legend>Payment Gateway Settings</legend>
            <dl>
                <!-- TODO EditorFor -->
                <dt>@Html.LabelFor(m => m.PaymentGatewayType)</dt>
                <dd>
                    @Html.EditorFor(m => m.PaymentGatewayType)
                    @Html.ValidationMessageFor(m => m.PaymentGatewayType, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
                <dt>@Html.LabelFor(m => m.PaymentGatewayApiUrl)</dt>
                <dd>
                    @Html.TextBoxFor(m => m.PaymentGatewayApiUrl)
                    @Html.ValidationMessageFor(m => m.PaymentGatewayApiUrl, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
                <dt>@Html.LabelFor(m => m.PaymentGatewayApiKey)</dt>
                <dd>
                    @Html.TextBoxFor(m => m.PaymentGatewayApiKey)
                    @Html.ValidationMessageFor(m => m.PaymentGatewayApiKey, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
                <dt>@Html.LabelFor(m => m.PaymentGatewayApiSecret)</dt>
                <dd>
                    @Html.TextBoxFor(m => m.PaymentGatewayApiSecret)
                    @Html.ValidationMessageFor(m => m.PaymentGatewayApiSecret, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
            </dl>
        </fieldset>
        <fieldset>
            <legend>Social Network / Content Settings</legend>
            <dl>
                <dt>@Html.LabelFor(m => m.FacebookPageUrl)</dt>
                <dd>
                    @Html.TextBoxFor(m => m.FacebookPageUrl)
                    @Html.ValidationMessageFor(m => m.FacebookPageUrl)
                </dd>
                <dt>@Html.LabelFor(m => m.TwitterName)</dt>
                <dd>
                    @Html.TextBoxFor(m => m.TwitterName)
                    @Html.ValidationMessageFor(m => m.TwitterName, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
                <dt>@Html.LabelFor(m => m.VideoEmbedHtml)</dt>
                <dd>
                    @Html.TextAreaFor(m => m.VideoEmbedHtml)
                    @Html.ValidationMessageFor(m => m.VideoEmbedHtml, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
            </dl>
        </fieldset>
        <div>
            @Html.UiSubmit("Save")
            @Html.UiCancel()
        </div>
    }
</div>