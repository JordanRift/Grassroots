@model JordanRift.Grassroots.Web.Models.RegisterModel
@{
    //
    // Grassroots is free software: you can redistribute it and/or modify
    // it under the terms of the GNU General Public License as published by
    // the Free Software Foundation, either version 3 of the License, or
    // (at your option) any later version.
    // 
    // Grassroots is distributed in the hope that it will be useful,
    // but WITHOUT ANY WARRANTY; without even the implied warranty of
    // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    // GNU General Public License for more details.
    // 
    // You should have received a copy of the GNU General Public License
    // along with Grassroots.  If not, see <http://www.gnu.org/licenses/>.
    //

    ViewBag.Title = "Set Up Your Account";
}
@section DocumentHead 
{
    @Html.Partial("UIForm")
}
<hgroup>
    <h1>Set Up Your Account</h1>
    <h3>Fill out the form below to create a new account.</h3>
</hgroup>
<div id="account-registration-form">
    @using (Html.BeginForm("RegisterUser", "Account", new { returnUrl = ViewBag.ReturnUrl })) {
        @Html.AntiForgeryToken("AccountRegister")
        <fieldset class="column">
            <legend>Connect with Facebook...</legend>
            <p>Click the button below to sign up with Facebook. You'll be redirected to grant @OrganizationName permission to access
            your profile, and sent right back here to complete the registration process.</p>
            @Html.ActionLink("Connect with Facebook", "Register", new { controller = "Facebook" }, new { @class = "fb-register" })
        </fieldset>
        <fieldset class="column">
            <legend>... Or do it the old fashioned way.</legend>
            @Html.ValidationSummary(false, "Account creation was unsuccessful. Please correct the errors and try again.", new { @class = "ui-widget ui-state-error ui-corner-all" })
            <h3>Account Information</h3>
            <p class="tip"><text>Passwords are required to be a minimum of </text>@ViewBag.PasswordLength<text> characters in length.</text></p>
            <dl>
                <dt>@Html.LabelFor(m => m.Email)</dt>
                <dd>
                    @Html.TextBoxFor(m => m.Email)
                    @Html.ValidationMessageFor(m => m.Email, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
                <dt>@Html.LabelFor(m => m.Password)</dt>
                <dd>
                    @Html.PasswordFor(m => m.Password)
                    @Html.ValidationMessageFor(m => m.Password, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
                <dt>@Html.LabelFor(m => m.ConfirmPassword)</dt>
                <dd>
                    @Html.PasswordFor(m => m.ConfirmPassword)
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
            </dl>
            
            <h3>About You</h3>
            <dl>
                <dt>@Html.LabelFor(m => m.FirstName)</dt>
                <dd>
                    @Html.TextBoxFor(m => m.FirstName)
                    @Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
                <dt>@Html.LabelFor(m => m.LastName)</dt>
                <dd>
                    @Html.TextBoxFor(m => m.LastName)
                    @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
                <dt>@Html.LabelFor(m => m.Birthdate)</dt>
                <dd>
                    @Html.EditorFor(m => m.Birthdate)
                    @Html.ValidationMessageFor(m => m.Birthdate, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
                <dt>@Html.LabelFor(m => m.Gender)</dt>
                <dd>
                    @Html.EditorFor(m => m.Gender)
                    @Html.ValidationMessageFor(m => m.Gender, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
                <dt>@Html.LabelFor(m => m.ZipCode)</dt>
                <dd>
                    @Html.TextBoxFor(m => m.ZipCode)
                    @Html.ValidationMessageFor(m => m.ZipCode, null, new { @class = "ui-state-error ui-corner-all" })
                </dd>
            </dl>
            <div class="check-box">
                @Html.EditorFor(m => m.Consent)
                @Html.LabelFor(m => m.Consent)
                @Html.ValidationMessageFor(m => m.Consent, null, new { @class = "ui-state-error ui-corner-all" })
            </div>
            <div>
                @Html.UiSubmit("Register")
                @Html.ActionLink("Cancel", "Index", new { controller = "Home", area = "" }, new { title = "Cancel", @class = "cancel" })
            </div>
        </fieldset>
    }
</div>